#!/bin/bash

. ~/.env

. ~/.local/share/chezmoi/utils.sh

# NOTE: 'update' is alias for 'upgrade'
# dnf automatically updates cache periodically so need to manually do this
sudo dnf upgrade

# Install through the updates proxy in TemplateVM - fedora-41-xfce
install_dnf_package "strawberry"
install_dnf_package "jq"
install_dnf_package "rustup"
install_dnf_package "git-credential-oauth"
install_dnf_package "ripgrep"
install_dnf_package "git-delta"
install_dnf_package "fish"
install_dnf_package "fzf"
install_dnf_package "fd-find"
install_dnf_package "bat"
install_dnf_package "ctags"
install_dnf_package "awscli"
install_dnf_package "compat-lua"
install_dnf_package "luarocks"
install_dnf_package "jetbrains-mono-fonts-all"
install_dnf_package "neovim"
install_dnf_package "tmux"
install_dnf_package "alacritty"
install_dnf_package "ImageMagick"
install_dnf_package "zoxide"
install_dnf_package "yq"
install_dnf_package "du-dust"
install_dnf_package "kiwix-desktop"
install_dnf_package "rofi"
install_dnf_package "speedtest-cli"
install_dnf_package "feh"
install_dnf_package "xmlstarlet"
install_dnf_package "nmap"
install_dnf_package "openvpn"
install_dnf_package "wireguard-tools"
install_dnf_package "plocate"
install_dnf_package "foliate"
install_dnf_package "gnome-disk-utility"
install_dnf_package "neomutt"
install_dnf_package "electrum"
install_dnf_package "nvme-cli"
install_dnf_package "obs-studio"
install_dnf_package "bemenu"
install_dnf_package "direnv"
install_dnf_package "gitleaks"
install_dnf_package "weechat"
install_dnf_package "hexyl"
install_dnf_package "qutebrowser"
install_dnf_package "gh"
install_dnf_package "glab"
install_dnf_package "ncmpcpp"
install_dnf_package "libmpd"
install_dnf_package "qt6ct"
install_dnf_package "mpv"
install_dnf_package "usbutils"
install_dnf_package "lsd"
install_dnf_package "pandoc"
install_dnf_package "usbutils"
install_dnf_package "zathura-pdf-mupdf"
install_dnf_package "mumble"
install_dnf_package "qalculate-qt"
install_dnf_package "isync"
# NOTE: Pre-installed?
# install_dnf_package "notmuch"
install_dnf_package "urlscan"
install_dnf_package "msmtp"
install_dnf_package "abook"
install_dnf_package "tree-sitter"

# Install into clone of fedora-41-xfce TemplateVM with Network access
# dbeaver
# https://dbeaver.io/download/2/
if uninstalled dbeaver; then
  echo "Installing dbeaver"
  curl -LO 'https://dbeaver.io/files/dbeaver-ce-latest-stable.x86_64.rpm'
  dnf install -y './dbeaver-ce-latest-stable.x86_64.rpm'
  rm 'dbeaver-ce-latest-stable.x86_64.rpm'
  echo "Installed dbeaver"
fi

#          ╭──────────────────────────────────────────────────────────╮
#          │                          cosign                          │
#          │            https://github.com/sigstore/cosign            │
#          ╰──────────────────────────────────────────────────────────╯
if uninstalled cosign; then
  echo "Installing cosign"
  # TODO: Ensure latest is installed rather than a static version
  version="2.5.3"
  base_url="https://github.com/sigstore/cosign/releases/download/v${version}"

  fedora_package="${base_url}/cosign-${version}.x86_64.rpm"
  pem="${base_url}/cosign-${version}.x86_64.rpm-keyless.pem"
  sig="${base_url}/cosign-${version}.x86_64.rpm-keyless.sig"

  curl -L --remote-name-all \
    "${fedora_package}" \
    "${pem}" \
    "${sig}"

  # TODO: Validate .rpm
  valid=1
  if valid; then
    sudo dnf install -y "./${fedora_package}"
  fi

  echo "Installed cosign"
else
  echo "Already installed cosign"
fi

#          ╭──────────────────────────────────────────────────────────╮
#          │                            jq                            │
#          │               https://jqlang.org/download/               │
#          ╰──────────────────────────────────────────────────────────╯
#
if uninstalled jq; then
  bin="jq-linux-amd64"
  checksums="sha256sum.txt"

  # TODO: Figure out a way to get and parse latest version without jq installed
  base_url="https://github.com/jqlang/jq/releases/download/jq-1.7.1/"

  curl -sL --remote-name-all "$base_url/${bin}" "${base_url}/${checksums}"

  verified_sha=$(grep "$bin" <"$checksums" | awk '{print $1}')
  download_sha=$(sha256sum "$bin" | awk '{print $1}')

  if [ "$download_sha" != "$verified_sha" ]; then
    echo "Could not install jq - verify checksums"
    exit 1
  fi

  chmod +x "$bin"
  sudo mv "$bin" /usr/local/bin/jq
  rm "$checksums"
  echo "Installed jq"
else
  echo "Already installed jq"
fi

#          ╭──────────────────────────────────────────────────────────╮
#          │                         chezmoi                          │
#          │                 https://www.chezmoi.io/                  │
#          ╰──────────────────────────────────────────────────────────╯
if uninstalled chezmoi; then
  echo "Installing chezmoi"
  version=$(curl -sL https://api.github.com/repos/twpayne/chezmoi/releases/latest | jq '.tag_name' | sed 's/"//g' | cut -d 'v' -f2)
  # Download .rpm pkg, the checksum file, checksum file signature, and public signing key:
  curl --silent --location --remote-name-all \
    "https://github.com/twpayne/chezmoi/releases/download/v$version/chezmoi_${version}_linux_x86_64.rpm" \
    "https://github.com/twpayne/chezmoi/releases/download/v$version/chezmoi_${version}_checksums.txt" \
    "https://github.com/twpayne/chezmoi/releases/download/v$version/chezmoi_${version}_checksums.txt.sig" \
    "https://github.com/twpayne/chezmoi/releases/download/v$version/chezmoi_cosign.pub"

  # verify the signature on the checksums file is valid
  cosign_verification_status=$(cosign verify-blob --key=chezmoi_cosign.pub --signature="chezmoi_${version}_checksums.txt.sig" "chezmoi_${version}_checksums.txt")

  if [ "$cosign_verification_status" -eq 1 ]; then
    echo "Signatures on Chemzoi checksums file is invalid"
    exit 1
  fi

  # verify the checksum matches
  if sha256sum --check "chezmoi_${version}_checksums.txt" --ignore-missing --status; then
    sudo apt install -y "./chezmoi_${version}_linux_x86_64.rpm"
    echo "Installed chezmoi"
  else
    echo "Encountered an error "
    exit 1
  fi
else
  echo "chezmoi already installed"
fi
