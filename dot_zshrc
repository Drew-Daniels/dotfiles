# This dotfile is managed using dotdrop
# TODO: Would be nice to have all the shared configuration between .bashrc and .zshrc in another file and imported somehow
# export env vars that vary by machine and that need to be *immediately* loaded into the shell process
set -o allexport && source ~/projects/dotfiles/.env.local && set +o allexport

parse_git_branch() {
  git branch 2>/dev/null | sed -n -e 's/^\* \(.*\)/[\1]/p'
}
COLOR_DEF='%f'
COLOR_USR='%F{243}'
COLOR_DIR='%F{197}'
COLOR_GIT='%F{39}'
NEWLINE=$'\n'

export EDITOR="nvim"
export VISUAL="nvim"

setopt PROMPT_SUBST
export PROMPT='${COLOR_USR}%n@%M ${COLOR_DIR}%d ${COLOR_GIT}$(parse_git_branch)${COLOR_DEF}${NEWLINE}%% '

# pnpm
export PNPM_HOME="/Users/drew.daniels/Library/pnpm"
export PATH="$PNPM_HOME:$PATH"
alias pn="pnpm"

# fzf
export FZF_DEFAULT_COMMAND="fd --type f"

# nvim
export VIMCONFIG=~/.config/nvim
export VIMDATA=~/.local/share/nvim

# general
export PROJECTS_DIR=~/projects
alias cls="printf '\33c\e[3J'"
alias arm="/usr/bin/env arch -arm64 zsh"
alias intel="/usr/bin/env arch -x86_64 zsh"

# tmux
alias tn="tmux new -s"
alias ta="tmux attach -t"
alias tl="tmux ls"
alias tk="tmux kill-session -t"

# tmuxinator
alias mux=tmuxinator
alias ts="mux start project"
export MUX_LAYOUT=main-horizontal
export MUX_SHELL_RUN_CMD="arch -x86_64 zsh"

# homebrew
PATH="/usr/local/sbin:$PATH"

eval "$(/opt/homebrew/bin/brew shellenv)"

# homebrew shell completion
if type brew &>/dev/null; then
  FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"
fi

# brew curl shell completion
fpath=("$(brew --prefix)/opt/curl/share/zsh/site-functions" $fpath)

# clang
export PATH="/opt/homebrew/opt/llvm/bin:$PATH"

# jless
alias yless="jless --yaml"

# mise
# development, testing, production
export MISE_ENV="development"
eval "$(/opt/homebrew/opt/mise/bin/mise activate zsh)"

# zoxide
eval "$(zoxide init --cmd j zsh)"

# starship
eval "$(starship init zsh)"

# bat
alias man="batman"
alias pb="prettybat"
# these lines are breaking postgres dropdb command for some reason
# alias -g -- -h='-h 2>&1 | bat --language=help --style=plain'
# alias -g -- --help='--help 2>&1 | bat --language=help --style=plain'
batdiff() {
  git diff --name-only --relative --diff-filter=d | xargs bat
}
# lsd
alias ls="lsd"

# tabtab source for packages
# uninstall by removing these lines
[[ -f ~/projects/dotfiles/tabtab/zsh/__tabtab.zsh ]] && . ~/projects/dotfiles/tabtab/zsh/__tabtab.zsh || true

# go
# TODO: Figure out why $GOPATH is unset when sourcing this file - likely because mise starts up after, but still, would be nice to not have to hard-code
export GOBIN="~/.local/share/mise/installs/go/1.21.1/packages/bin"

# neovim
alias upgrade_nvim="brew upgrade nvim --fetch-HEAD"

# yazi
function ya() {
  local tmp="$(mktemp -t "yazi-cwd.XXXXX")"
  yazi "$@" --cwd-file="$tmp"
  if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
    cd -- "$cwd"
  fi
  rm -f -- "$tmp"
}

# tabtab source for packages
# uninstall by removing these lines
[[ -f ~/.config/tabtab/zsh/__tabtab.zsh ]] && . ~/.config/tabtab/zsh/__tabtab.zsh || true

# java
export PATH="$PATH:/opt/apache-maven-3.8.5/bin"

# iterm2
iterm2_print_user_vars() {
  ip=$(curl -s ifconfig.me | awk '{print $1}')
  whois_response=$(whois "$ip")
  iterm2_set_user_var publicIP "$ip"
  iterm2_set_user_var status $(ping -c 1 google.com >/dev/null && echo "" || echo "OFFLINE")
  iterm2_set_user_var city $(echo "$whois_response" | sed -n 's/^City: \(.*\)/\1/p' | xargs)
  iterm2_set_user_var stateProv $(echo "$whois_response" | sed -n 's/^StateProv: \(.*\)/\1/p' | xargs)
  iterm2_set_user_var country $(echo "$whois_response" | sed -n 's/^Country: \(.*\)/\1/p' | xargs)
  iterm2_set_user_var orgName $(echo "$whois_response" | sed -n 's/^OrgName: \(.*\)/\1/p' | xargs)

  homeIP=$(nslookup $HOME_DDNS_HOSTNAME 8.8.8.8 | grep "Address" | tail -1 | awk '{print $2}' | tr -d '\n')
  matches=$([ "$ip" = "$homeIP" ] && echo "HOME-NET" || echo "OUTSIDE-NET")
  iterm2_set_user_var using_home_ip $(echo "$matches")
}

if [ "$TERM_PROGRAM" = 'iTerm.app' ] && [ -z "$TMUX" ]; then
  iterm2_print_user_vars
fi

# initialise completions with ZSH's compinit
autoload -Uz compinit bashcompinit
compinit
bashcompinit

# terraform
complete -o nospace -C /opt/homebrew/bin/terraform terraform

# aws cli
complete -C '/usr/local/bin/aws_completer' aws

# work
if [ "$MACHINE" = "work" ]; then

  eval "$(aws configure export-credentials --format env --profile kipu-dev)"
  eval "export AWS_REGION=$(aws configure get region --profile kipu-dev)"

  export DEFAULT_TMUXINATOR_PROJECTS="config dotfiles work_notes healthmatters"

  # TODO: Could probably find a better place for this
  export DOTDROP_PROFILE=work
fi

# playwright
alias psr="npx playwright show-report"

# vcpkg - https://github.com/Microsoft/vcpkg
export VCPKG_ROOT=~/projects/vcpkg
export PATH="$VCPKG_ROOT:$PATH"

# solargraph - https://github.com/castwide/solargraph

# htmlbeautifier
alias hb="htmlbeautifier"

# work
if [ -f ~/projects/dotfiles/dotfiles/zsh/functions/work.sh ]; then
  . ~/projects/dotfiles/dotfiles/zsh/functions/work.sh
fi

. ~/projects/dotfiles/dotfiles/zsh/functions/helpers.sh

# spotify_player
alias sp="spotify_player"

# Run rubocop only on ruby files that have changed
alias rcdiff="git diff --name-only -- '***.rb' | xargs bundle exec rubocop --force-exclusion -a"
# Run rspec only on ruby files that have changed
alias rsdiff="git diff --name-only -- '***_spec.rb' | xargs bundle exec rspec"

# bundler
alias be="bundle exec"
# alias ber="bundle exec rspec"
alias ber="bundle exec rake"

# 1password
eval "$(op completion zsh)"
compdef _op op

# backups
# export BACKUP_DIR="$HOME"/backups

# keepassxc
alias kxc="keepassxc-cli"

# alacritty-themes
# https://www.npmjs.com/package/alacritty-themes/v/5.1.1
alias at="alacritty-themes"

# git
# alias git="TZ=UTC git"

# export GIT_AUTHOR_DATE="$(date -u +%F)T00:00:00+0000"
# export GIT_COMMITER_DATE="$GIT_AUTHOR_DATE"

# dotdrop
alias dot="~/projects/dotfiles/dotdrop.sh"
