parse_git_branch() {
  git branch 2>/dev/null | sed -n -e 's/^\* \(.*\)/[\1]/p'
}
COLOR_DEF='%f'
COLOR_USR='%F{243}'
COLOR_DIR='%F{197}'
COLOR_GIT='%F{39}'
NEWLINE=$'\n'

export EDITOR="nvim"
export VISUAL="nvim"

export PROMPT='${COLOR_USR}%n@%M ${COLOR_DIR}%d ${COLOR_GIT}$(parse_git_branch)${COLOR_DEF}${NEWLINE}%% '

# delta
export PATH="$PATH:/home/drew/.local/bin"

# fzf
export FZF_DEFAULT_COMMAND="fd --type f"

# nvim
export VIMCONFIG=~/.config/nvim
export VIMDATA=~/.local/share/nvim
export PATH="$PATH:/opt/nvim-linux-x86_64/bin"

# general
export PROJECTS_DIR=~/projects
alias cls="printf '\33c\e[3J'"

# tmux
alias tn="tmux new -s"
alias ta="tmux attach -t"
alias tl="tmux ls"
alias tk="tmux kill-session -t"

# tmuxinator
alias mux=tmuxinator
alias ts="mux start project"
export MUX_LAYOUT=main-horizontal

# jless
alias yless="jless --yaml"

# mise
# TODO: Eventually remove mise - until now this is a hack to stop the error when this
# gets sourced on NixOS, where mise is not installed
if command -v mise >/dev/null; then
  # development, testing, production
  export MISE_ENV="development"
  eval "$(mise activate bash)"
fi

# starship
eval "$(starship init bash)"

# bat
alias man="batman"
alias pb="prettybat"
# these lines are breaking postgres dropdb command for some reason
# alias -g -- -h='-h 2>&1 | bat --language=help --style=plain'
# alias -g -- --help='--help 2>&1 | bat --language=help --style=plain'
batdiff() {
  git diff --name-only --relative --diff-filter=d | xargs bat
}
# lsd
alias ls="lsd"

# yazi
function ya() {
  local tmp="$(mktemp -t "yazi-cwd.XXXXX")"
  yazi "$@" --cwd-file="$tmp"
  if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
    cd -- "$cwd" || exit
  fi
  rm -f -- "$tmp"
}

# java
export PATH="$PATH:/opt/apache-maven-3.8.5/bin"

# aws cli
complete -C '/usr/local/bin/aws_completer' aws

# work
if [ "$MACHINE" = "work" ]; then
  eval "$(aws configure export-credentials --format env --profile kipu-dev)"
  eval "export AWS_REGION=$(aws configure get region --profile kipu-dev)"

  export DEFAULT_TMUXINATOR_PROJECTS="dotfiles work_notes healthmatters"
fi

# playwright
alias psr="npx playwright show-report"

# vcpkg - https://github.com/Microsoft/vcpkg
export VCPKG_ROOT=~/projects/vcpkg
export PATH="$VCPKG_ROOT:$PATH"

# solargraph - https://github.com/castwide/solargraph
export SOLARGRAPH_GLOBAL_CONFIG=~/projects/dotfiles/solargraph/config.yml

# htmlbeautifier
alias hb="htmlbeautifier"

# spotify_player
alias sp="spotify_player"

# Run rubocop only on ruby files that have changed
alias rcdiff="git diff --name-only -- '***.rb' | xargs bundle exec rubocop --force-exclusion -a"
# Run rspec only on ruby files that have changed
alias rsdiff="git diff --name-only -- '***_spec.rb' | xargs bundle exec rspec"

# bundler
alias be="bundle exec"
# alias ber="bundle exec rspec"
alias ber="bundle exec rake"

# 1password
eval "$(op completion bash)"

# keepassxc
alias kxc="keepassxc-cli"

# alacritty-themes
# https://www.npmjs.com/package/alacritty-themes/v/5.1.1
alias at="alacritty-themes"

# git
# does the same thing as setting both env vars below
# alias git="TZ=UTC git"

# zoxide
eval "$(zoxide init --cmd j bash)"

# export GIT_AUTHOR_DATE="$(date -u +%F)T00:00:00+0000"
# export GIT_COMMITER_DATE="$GIT_AUTHOR_DATE"
test -f "$HOME/.cargo/env" && . "$HOME/.cargo/env"
source /home/drew/projects/alacritty/extra/completions/alacritty.bash

# restic
# Cannot use 1Password CLI as root, so need to set password manually
# export RESTIC_PASSWORD_COMMAND="op read op://Personal/restic/password -n"

# apt, dpkg
alias dpkg_export='dpkg -l | grep ^ii | awk '\''{print $2}'\'' > ~/.config/apt/packages'

# Standard Notes
export PATH="$PATH:/opt/standard_notes"
